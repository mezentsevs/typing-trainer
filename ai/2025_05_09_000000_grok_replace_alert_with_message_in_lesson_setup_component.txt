В веб приложении есть страница логина и настроек урока:
resources/js/components/Login.vue
<template>
    <div class="min-h-screen flex items-center justify-center bg-gray-100">
        <div class="bg-white p-8 rounded shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6">Login</h2>
            <form @submit.prevent="login">
                <div class="mb-4">
                    <label class="block text-gray-700">Email</label>
                    <input v-model="form.email" type="email" class="w-full p-2 border rounded" required />
                </div>
                <div class="mb-4">
                    <label class="block text-gray-700">Password</label>
                    <input v-model="form.password" type="password" class="w-full p-2 border rounded" required />
                </div>
                <button type="submit" class="w-full bg-blue-500 text-white p-2 rounded">Login</button>
            </form>
            <Error :message="error" />
            <p class="mt-4">
                Don't have an account? <router-link to="/register" class="text-blue-500">Register</router-link>
            </p>
        </div>
    </div>
</template>

<script lang="ts" setup>
import Error from './Error.vue';
import { ref } from 'vue';
import { useAuthStore } from '@/stores/auth';
import { useRouter } from 'vue-router';

const authStore = useAuthStore();
const router = useRouter();

const error = ref('');
const form = ref({ email: '', password: '' });

const login = async () => {
    try {
        await authStore.login(form.value.email, form.value.password);
        await router.push('/');
    } catch (err) {
        error.value = 'Login failed';
    }
};
</script>
resources/js/components/LessonSetup.vue
<template>
    <div class="min-h-screen flex items-center justify-center bg-gray-100">
        <div class="bg-white p-8 rounded shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6">Setup Lessons</h2>
            <form @submit.prevent="generateLessons">
                <div class="mb-4">
                    <label class="block text-gray-700">Language</label>
                    <select v-model="form.language" class="w-full p-2 border rounded" required>
                        <option value="en">English</option>
                        <option value="ru">Russian</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-700">Number of Lessons</label>
                    <input
                        v-model.number="form.lesson_count"
                        type="number"
                        min="1"
                        max="20"
                        class="w-full p-2 border rounded"
                        required
                    />
                </div>
                <button type="submit" class="w-full bg-blue-500 text-white p-2 rounded">Generate Lessons</button>
            </form>
        </div>
    </div>
</template>

<script lang="ts" setup>
import axios from 'axios';
import { ref } from 'vue';
import { useRouter } from 'vue-router';

const router = useRouter();

const form = ref({ language: 'en', lesson_count: 10 });

//TODO: replace alert with message
const generateLessons = async () => {
    try {
        await axios.post('/lessons/generate', form.value);
        await router.push(`/lesson/${form.value.language}/1`);
    } catch (error) {
        alert('Failed to generate lessons');
    }
};
</script>
Сейчас на странице настроек урока используются alert() для вывода сообщений об ошибках. Нужно это исправить. Нужно выводить сообщения об ошибках на странице, так же, как это сделано на странице логина. Минимальные изменения. Код не должен содержать комментариев. Выведи обновленный код всего компонента.




html

Копировать
<template>
    <div class="min-h-screen flex items-center justify-center bg-gray-100">
        <div class="bg-white p-8 rounded shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6">Setup Lessons</h2>
            <form @submit.prevent="generateLessons">
                <div class="mb-4">
                    <label class="block text-gray-700">Language</label>
                    <select v-model="form.language" class="w-full p-2 border rounded" required>
                        <option value="en">English</option>
                        <option value="ru">Russian</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-700">Number of Lessons</label>
                    <input
                        v-model.number="form.lesson_count"
                        type="number"
                        min="1"
                        max="20"
                        class="w-full p-2 border rounded"
                        required
                    />
                </div>
                <button type="submit" class="w-full bg-blue-500 text-white p-2 rounded">Generate Lessons</button>
            </form>
            <Error :message="error" />
        </div>
    </div>
</template>

<script lang="ts" setup>
import Error from './Error.vue';
import axios from 'axios';
import { ref } from 'vue';
import { useRouter } from 'vue-router';

const router = useRouter();

const form = ref({ language: 'en', lesson_count: 10 });
const error = ref('');

const generateLessons = async () => {
    try {
        await axios.post('/lessons/generate', form.value);
        await router.push(`/lesson/${form.value.language}/1`);
    } catch (err) {
        error.value = 'Failed to generate lessons';
    }
};
</script>
Показать в боковой панели






Чем я могу помочь?


DeepSearch


Think

Grok 3
